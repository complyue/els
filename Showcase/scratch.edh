
symbol @qqq

case 5 of { i } -> i

x = 1

x += 2

x *= 5

f = () => {
  x = 9
  y = g( x )
  return y - 3
}

g = ( x ) => {
  return x + i
}

data D( x, y ) {
  method z() {
    this.x + this.y
  }
}


d = D()

d.
p = 7

p.s

D.z

d.x * d.y - d.z()

case d of { D( x= x', y= y' ) = d' } -> {
  x' + y' - d'.z()
}

namespace ns ( x=3, z=5 ) {
  {## the y is sth ...   #}
  y = x * z

  {## f() takes a number ... #}
  method f( n ) n * x + 1

  {## qqq is ...
   #
   #}
  ; @qqq = x => x - 5

}


ns.f(
  ns.y + ns.x
)
