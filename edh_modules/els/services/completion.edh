
import ( world, elsDebug, **_ ) 'els'

import * './utils'


data CompletionContext( triggerKind, triggerCharacter ) {

  Invoked := 1
  TriggerCharacter := 2
  TriggerForIncompleteCompletions := 3

  # this'll always match
  method __match__( jsonRepr ) return CompletionContext (
    jsonRepr[ 'triggerKind' ] or Invoked,
    jsonRepr[ 'triggerCharacter' ] or None,
  )

}


export method @'textDocument/completion' (
  textDocument, position, context= {}, ***_
) void {
  # try parse & resolve then obtain completion asynchronously,
  # to not block subsequent requests from the lsp client
  case textDocument of { TxtDocFile( absFilePath ) } ->
  case position of { Position( line, character ) } ->
  case context of { CompletionContext( triggerKind, triggerCharacter ) } ->
  { return { go {
        modu = world.locateByFile( absFilePath )
        if triggerKind == CompletionContext.TriggerCharacter
        # elsDebug.replHere()
        then perform lspRespond( case triggerCharacter of {
            # '.' -> world.dotNota( modu, line, character )
            '.' -> {
              cr = world.dotNota( modu, line, character )
              ; -1<|'cr: ' ++ cr
              cr
            }
            '@' -> None
            error( 'unexpected trigger char: ' ++ triggerCharacter )
        } )
        else perform lspRespond( {
            'isIncomplete': false,
            'items': [
              {
                'label': 'compl1-label',
                'insertText': 'compl1-insert',
                'detail': 'compl1-detail',
                'documentation': 'compl1-doc',
                'preselect': false,
                'sortText': 'compl1-sort',
                'filterText': 'compl1-filter',
              },
              {
                'label': 'compl2-label',
                'insertText': 'compl2-insert',
                'detail': 'compl2-detail',
                'documentation': 'compl2-doc',
                'preselect': false,
                'sortText': 'compl2-sort',
                'filterText': 'compl2-filter',
              },
            ],
        } )
  } } }
  error( 'unexpected lsp params' )
}
